generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 Int         @id @default(autoincrement())
  name               String
  nickname           String?     @unique
  cpf                String
  email              String      @unique
  password           String
  phone              String?
  totalScore         Int         @default(0)
  currentLevelPoints Int         @default(0)
  levelId            Int         @default(1)
  createdAt          DateTime?   @default(now())
  updatedAt          DateTime?   @updatedAt
  level              levels      @relation(fields: [levelId], references: [id])
  address            addresses[]
  card               cards[]
  favorite           favorites[]
  purchase           purchases[]
}

model addresses {
  id           Int       @id @default(autoincrement())
  street       String
  number       Int
  city         String
  state        String
  neighborhood String
  complement   String?
  cep          String
  userId       Int
  createdAt    DateTime? @default(now())
  updatedAt    DateTime? @updatedAt
  user         users     @relation(fields: [userId], references: [id])
}

model cards {
  id             Int       @id @default(autoincrement())
  name           String
  number         String
  expirationDate DateTime
  userId         Int
  createdAt      DateTime? @default(now())
  updatedAt      DateTime? @updatedAt
  cvv            Int       @unique
  user           users     @relation(fields: [userId], references: [id])
}

model products {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  price       Int
  shipping    Int
  stock       Int
  image       String
  categoryId  Int
  createdAt   DateTime?   @default(now())
  updatedAt   DateTime?   @updatedAt
  category    categories  @relation(fields: [categoryId], references: [id])
  favorite    favorites[]
  purchase    purchases[]
}

model categories {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  createdAt DateTime?  @default(now())
  updatedAt DateTime?  @updatedAt
  product   products[]
}

model purchases {
  id        Int       @id @default(autoincrement())
  quantity  Int
  status    String @default("in progress")
  productId Int
  userId    Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  product   products  @relation(fields: [productId], references: [id])
  user      users     @relation(fields: [userId], references: [id])
}

model levels {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  totalPoints Int
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  features    Json
  user        users[]
}

model favorites {
  id        Int       @id @default(autoincrement())
  userId    Int
  productId Int
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  product   products  @relation(fields: [productId], references: [id])
  user      users     @relation(fields: [userId], references: [id])
}
